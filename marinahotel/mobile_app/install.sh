#!/bin/bash

# ุณูุฑูุจุช ุชุซุจูุช ุชุทุจูู ููุฏู ูุงุฑููุง ุนูู ุงูุฌูุงุฒ
# ูุชุทูุจ ุชูุตูู ุฌูุงุฒ ุฃูุฏุฑููุฏ ูุน ุชูุนูู ูุถุน ุงููุทูุฑ

echo "๐ฑ ุจุฏุก ุชุซุจูุช ุชุทุจูู ููุฏู ูุงุฑููุง..."

# ุฃููุงู ููุฅุฎุฑุงุฌ
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# ุฏุงูุฉ ูุทุจุงุนุฉ ุงูุฑุณุงุฆู ุงูููููุฉ
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# ุงูุชุญูู ูู ูุฌูุฏ adb
if ! command -v adb &> /dev/null; then
    print_error "ADB ุบูุฑ ูุซุจุช. ูุฑุฌู ุชุซุจูุช Android SDK Platform Tools"
    echo "ููููู ุชุญูููู ูู: https://developer.android.com/studio/releases/platform-tools"
    exit 1
fi

# ุงูุชุญูู ูู ูุฌูุฏ ููู APK
APK_FILES=(
    "marina-hotel-debug.apk"
    "marina-hotel-release.apk"
    "platforms/android/app/build/outputs/apk/debug/app-debug.apk"
    "platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk"
)

APK_FILE=""
for file in "${APK_FILES[@]}"; do
    if [ -f "$file" ]; then
        APK_FILE="$file"
        break
    fi
done

if [ -z "$APK_FILE" ]; then
    print_error "ูู ูุชู ุงูุนุซูุฑ ุนูู ููู APK. ูุฑุฌู ุจูุงุก ุงูุชุทุจูู ุฃููุงู ุจุงุณุชุฎุฏุงู:"
    echo "  ./build.sh"
    echo "ุฃู:"
    echo "  cordova build android"
    exit 1
fi

print_status "ุชู ุงูุนุซูุฑ ุนูู ููู APK: $APK_FILE"

# ุจุฏุก ุฎุฏูุฉ ADB
print_status "ุจุฏุก ุฎุฏูุฉ ADB..."
adb start-server

# ุงูุชุญูู ูู ุงูุฃุฌูุฒุฉ ุงููุชุตูุฉ
print_status "ุงูุจุญุซ ุนู ุงูุฃุฌูุฒุฉ ุงููุชุตูุฉ..."
DEVICES=$(adb devices | grep -v "List of devices" | grep "device$" | wc -l)

if [ "$DEVICES" -eq 0 ]; then
    print_error "ูุง ุชูุฌุฏ ุฃุฌูุฒุฉ ูุชุตูุฉ. ูุฑุฌู:"
    echo "1. ุชูุตูู ุฌูุงุฒ ุงูุฃูุฏุฑููุฏ ุจูุงุจู USB"
    echo "2. ุชูุนูู ูุถุน ุงููุทูุฑ ูู ุงูุฅุนุฏุงุฏุงุช"
    echo "3. ุชูุนูู ุชุตุญูุญ USB"
    echo "4. ุงูุณูุงุญ ูุชุตุญูุญ USB ูู ูุฐุง ุงูููุจููุชุฑ"
    echo ""
    echo "ููุชุญูู ูู ุงูุฃุฌูุฒุฉ ุงููุชุตูุฉ:"
    echo "  adb devices"
    exit 1
elif [ "$DEVICES" -eq 1 ]; then
    DEVICE=$(adb devices | grep "device$" | cut -f1)
    print_success "ุชู ุงูุนุซูุฑ ุนูู ุฌูุงุฒ ูุงุญุฏ: $DEVICE"
else
    print_warning "ุชู ุงูุนุซูุฑ ุนูู ุนุฏุฉ ุฃุฌูุฒุฉ ูุชุตูุฉ:"
    adb devices | grep "device$"
    echo ""
    echo "ูุฑุฌู ุงุฎุชูุงุฑ ุฑูู ุงูุฌูุงุฒ ุฃู ุงุชุฑูู ูุงุฑุบุงู ููุฃูู:"
    read -p "ุฑูู ุงูุฌูุงุฒ: " DEVICE_CHOICE
    
    if [ -n "$DEVICE_CHOICE" ]; then
        DEVICE=$DEVICE_CHOICE
    else
        DEVICE=$(adb devices | grep "device$" | cut -f1 | head -n1)
    fi
    print_status "ุชู ุงุฎุชูุงุฑ ุงูุฌูุงุฒ: $DEVICE"
fi

# ุงูุชุญูู ูู ุฅุตุฏุงุฑ ุงูุฃูุฏุฑููุฏ
print_status "ุงูุชุญูู ูู ุฅุตุฏุงุฑ ุงูุฃูุฏุฑููุฏ..."
ANDROID_VERSION=$(adb -s $DEVICE shell getprop ro.build.version.release)
API_LEVEL=$(adb -s $DEVICE shell getprop ro.build.version.sdk)

print_status "ุฅุตุฏุงุฑ ุงูุฃูุฏุฑููุฏ: $ANDROID_VERSION (API $API_LEVEL)"

if [ "$API_LEVEL" -lt 19 ]; then
    print_warning "ุฅุตุฏุงุฑ ุงูุฃูุฏุฑููุฏ ูุฏูู. ุงูุชุทุจูู ูุชุทูุจ API 19 (Android 4.4) ุฃู ุฃุญุฏุซ"
    echo "ูู ุชุฑูุฏ ุงููุชุงุจุนุฉุ (y/N)"
    read -p "ุงูุงุฎุชูุงุฑ: " CONTINUE
    if [ "$CONTINUE" != "y" ] && [ "$CONTINUE" != "Y" ]; then
        print_status "ุชู ุฅูุบุงุก ุงูุชุซุจูุช"
        exit 0
    fi
fi

# ุงูุชุญูู ูู ูุฌูุฏ ุงูุชุทุจูู ูุณุจูุงู
print_status "ุงูุชุญูู ูู ูุฌูุฏ ุงูุชุทุจูู..."
PACKAGE_NAME="com.marinahotel.app"
if adb -s $DEVICE shell pm list packages | grep -q "$PACKAGE_NAME"; then
    print_warning "ุงูุชุทุจูู ูุซุจุช ูุณุจูุงู. ุณูุชู ุชุญุฏูุซู"
    
    # ุฅูุบุงุก ุชุซุจูุช ุงููุณุฎุฉ ุงููุฏููุฉ (ุงุฎุชูุงุฑู)
    echo "ูู ุชุฑูุฏ ุฅูุบุงุก ุชุซุจูุช ุงููุณุฎุฉ ุงููุฏููุฉ ุฃููุงูุ (y/N)"
    read -p "ุงูุงุฎุชูุงุฑ: " UNINSTALL
    if [ "$UNINSTALL" = "y" ] || [ "$UNINSTALL" = "Y" ]; then
        print_status "ุฅูุบุงุก ุชุซุจูุช ุงููุณุฎุฉ ุงููุฏููุฉ..."
        adb -s $DEVICE uninstall $PACKAGE_NAME
        if [ $? -eq 0 ]; then
            print_success "ุชู ุฅูุบุงุก ุชุซุจูุช ุงููุณุฎุฉ ุงููุฏููุฉ"
        else
            print_warning "ูุดู ูู ุฅูุบุงุก ุชุซุจูุช ุงููุณุฎุฉ ุงููุฏููุฉ"
        fi
    fi
fi

# ุชุซุจูุช ุงูุชุทุจูู
print_status "ุฌุงุฑู ุชุซุจูุช ุงูุชุทุจูู..."
echo "ูุฐุง ูุฏ ูุณุชุบุฑู ุจุถุน ุซูุงู..."

adb -s $DEVICE install -r "$APK_FILE"
INSTALL_RESULT=$?

if [ $INSTALL_RESULT -eq 0 ]; then
    print_success "ุชู ุชุซุจูุช ุงูุชุทุจูู ุจูุฌุงุญ! ๐"
    
    # ุนุฑุถ ูุนูููุงุช ุงูุชุทุจูู
    APP_VERSION=$(adb -s $DEVICE shell dumpsys package $PACKAGE_NAME | grep "versionName" | head -n1 | cut -d'=' -f2)
    print_status "ุฅุตุฏุงุฑ ุงูุชุทุจูู: $APP_VERSION"
    
    # ุงุฎุชูุงุฑ ุชุดุบูู ุงูุชุทุจูู
    echo ""
    echo "ูู ุชุฑูุฏ ุชุดุบูู ุงูุชุทุจูู ุงูุขูุ (Y/n)"
    read -p "ุงูุงุฎุชูุงุฑ: " LAUNCH
    if [ "$LAUNCH" != "n" ] && [ "$LAUNCH" != "N" ]; then
        print_status "ุชุดุบูู ุงูุชุทุจูู..."
        adb -s $DEVICE shell am start -n "$PACKAGE_NAME/.MainActivity"
        if [ $? -eq 0 ]; then
            print_success "ุชู ุชุดุบูู ุงูุชุทุจูู"
        else
            print_warning "ูุดู ูู ุชุดุบูู ุงูุชุทุจูู ุชููุงุฆูุงู. ููููู ุชุดุบููู ูู ุดุงุดุฉ ุงูุชุทุจููุงุช"
        fi
    fi
    
    echo ""
    echo "ูุนูููุงุช ูููุฏุฉ:"
    echo "๐ฑ ุงุณู ุงูุชุทุจูู: ููุฏู ูุงุฑููุง"
    echo "๐ฆ ูุนุฑู ุงูุญุฒูุฉ: $PACKAGE_NAME"
    echo "๐ง ูุนุฑุถ ุณุฌูุงุช ุงูุชุทุจูู: adb logcat | grep 'Marina'"
    echo "๐๏ธ  ูุฅูุบุงุก ุงูุชุซุจูุช: adb uninstall $PACKAGE_NAME"
    
else
    print_error "ูุดู ูู ุชุซุจูุช ุงูุชุทุจูู"
    echo ""
    echo "ุฃุณุจุงุจ ูุญุชููุฉ ูููุดู:"
    echo "1. ูุณุงุญุฉ ุชุฎุฒูู ุบูุฑ ูุงููุฉ ุนูู ุงูุฌูุงุฒ"
    echo "2. ุฅุนุฏุงุฏุงุช ุงูุฃูุงู ุชููุน ุชุซุจูุช ุงูุชุทุจููุงุช ูู ูุตุงุฏุฑ ุบูุฑ ูุนุฑููุฉ"
    echo "3. ุชูููุน ุงูุชุทุจูู ุบูุฑ ุตุงูุญ"
    echo "4. ุชุถุงุฑุจ ูุน ุฅุตุฏุงุฑ ูุซุจุช ูุณุจูุงู"
    echo ""
    echo "ุญููู ูุญุชููุฉ:"
    echo "1. ุชูุนูู 'ุชุซุจูุช ุงูุชุทุจููุงุช ูู ูุตุงุฏุฑ ุบูุฑ ูุนุฑููุฉ' ูู ุฅุนุฏุงุฏุงุช ุงูุฃูุงู"
    echo "2. ุฅูุบุงุก ุชุซุจูุช ุงููุณุฎุฉ ุงููุฏููุฉ: adb uninstall $PACKAGE_NAME"
    echo "3. ุฅุนุงุฏุฉ ุจูุงุก ุงูุชุทุจูู: ./build.sh"
    echo "4. ุงูุชุญูู ูู ุณุฌูุงุช ADB: adb logcat"
    exit 1
fi