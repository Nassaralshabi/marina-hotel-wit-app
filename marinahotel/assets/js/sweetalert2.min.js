/* SweetAlert2 محلي مبسط للعمل بدون إنترنت */
(function() {
    'use strict';
    
    const Swal = {
        fire: function(options) {
            return new Promise((resolve) => {
                if (typeof options === 'string') {
                    options = { text: options };
                }
                
                const config = {
                    title: options.title || 'تنبيه',
                    text: options.text || '',
                    icon: options.icon || 'info',
                    confirmButtonText: options.confirmButtonText || 'موافق',
                    cancelButtonText: options.cancelButtonText || 'إلغاء',
                    showCancelButton: options.showCancelButton || false,
                    ...options
                };
                
                const overlay = document.createElement('div');
                overlay.className = 'swal-overlay';
                overlay.style.cssText = `
                    position: fixed; top: 0; left: 0; width: 100%; height: 100%;
                    background: rgba(0,0,0,0.4); z-index: 9999; display: flex;
                    align-items: center; justify-content: center;
                `;
                
                const modal = document.createElement('div');
                modal.className = 'swal-modal';
                modal.style.cssText = `
                    background: white; padding: 25px; border-radius: 10px;
                    box-shadow: 0 10px 30px rgba(0,0,0,0.3); max-width: 400px;
                    width: 90%; text-align: center; font-family: 'Tajawal', Arial;
                    direction: rtl;
                `;
                
                let iconHtml = '';
                if (config.icon === 'success') {
                    iconHtml = '<div style="color: #28a745; font-size: 50px; margin-bottom: 15px;">✓</div>';
                } else if (config.icon === 'error') {
                    iconHtml = '<div style="color: #dc3545; font-size: 50px; margin-bottom: 15px;">✗</div>';
                } else if (config.icon === 'warning') {
                    iconHtml = '<div style="color: #ffc107; font-size: 50px; margin-bottom: 15px;">⚠</div>';
                } else if (config.icon === 'info') {
                    iconHtml = '<div style="color: #17a2b8; font-size: 50px; margin-bottom: 15px;">ℹ</div>';
                }
                
                modal.innerHTML = `
                    ${iconHtml}
                    <h3 style="margin: 0 0 15px 0; color: #333;">${config.title}</h3>
                    <p style="margin: 0 0 20px 0; color: #666; line-height: 1.4;">${config.text}</p>
                    <div style="text-align: center;">
                        <button id="swal-confirm" style="
                            background: #007bff; color: white; border: none; padding: 10px 20px;
                            border-radius: 5px; margin: 0 5px; cursor: pointer; font-size: 14px;
                        ">${config.confirmButtonText}</button>
                        ${config.showCancelButton ? `
                        <button id="swal-cancel" style="
                            background: #6c757d; color: white; border: none; padding: 10px 20px;
                            border-radius: 5px; margin: 0 5px; cursor: pointer; font-size: 14px;
                        ">${config.cancelButtonText}</button>
                        ` : ''}
                    </div>
                `;
                
                overlay.appendChild(modal);
                document.body.appendChild(overlay);
                
                const confirmBtn = modal.querySelector('#swal-confirm');
                const cancelBtn = modal.querySelector('#swal-cancel');
                
                confirmBtn.addEventListener('click', () => {
                    document.body.removeChild(overlay);
                    resolve({ isConfirmed: true, value: true });
                });
                
                if (cancelBtn) {
                    cancelBtn.addEventListener('click', () => {
                        document.body.removeChild(overlay);
                        resolve({ isConfirmed: false, isDismissed: true });
                    });
                }
                
                overlay.addEventListener('click', (e) => {
                    if (e.target === overlay) {
                        document.body.removeChild(overlay);
                        resolve({ isConfirmed: false, isDismissed: true });
                    }
                });
            });
        },
        
        close: function() {
            const overlay = document.querySelector('.swal-overlay');
            if (overlay) {
                document.body.removeChild(overlay);
            }
        }
    };
    
    window.Swal = Swal;
})();