name: 🚀 Android Release Build

"on":
  push:
    branches:
      - main
      - 'release/**'
      - 'capy/**'
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      base_api_url:
        description: 'BASE_API_URL للبناء (اختياري)'
        required: false
        default: ''
      create_release:
        description: 'إنشاء GitHub Release'
        type: boolean
        default: false

permissions:
  contents: write
  actions: read

env:
  FLUTTER_VERSION: '3.24.0'
  JAVA_VERSION: '17'

jobs:
  build-release:
    name: 🏗️ بناء Release APK + AAB
    runs-on: ubuntu-latest
    timeout-minutes: 35
    
    defaults:
      run:
        working-directory: mobile
    
    steps:
      - name: ✅ جلب الكود المصدري
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ☕ تثبيت Java ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'

      - name: 🐦 تثبيت Flutter ${{ env.FLUTTER_VERSION }}
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: 📦 كاش اعتماديات Flutter
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
            build
          key: ${{ runner.os }}-flutter-release-${{ hashFiles('mobile/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-release-
            ${{ runner.os }}-flutter-

      - name: 📦 كاش اعتماديات Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            android/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('mobile/android/gradle/wrapper/gradle-wrapper.properties', 'mobile/android/build.gradle', 'mobile/android/app/build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 🔍 فحص Flutter
        run: |
          flutter --version
          flutter doctor -v

      - name: 📋 حساب رقم الإصدار
        id: version
        run: |
          VERSION_NAME=$(grep '^version:' pubspec.yaml | awk '{print $2}' | cut -d'+' -f1)
          BUILD_NUMBER=${{ github.run_number }}
          DATE_UTC=$(date -u +'%Y%m%d')
          
          echo "version_name=$VERSION_NAME" >> $GITHUB_OUTPUT
          echo "build_number=$BUILD_NUMBER" >> $GITHUB_OUTPUT
          echo "date=$DATE_UTC" >> $GITHUB_OUTPUT
          
          echo "📦 الإصدار: v$VERSION_NAME"
          echo "🔢 رقم البناء: $BUILD_NUMBER"

      - name: 📥 تحميل الاعتماديات
        run: |
          echo "📥 تحميل اعتماديات Flutter..."
          flutter pub get
          echo "✅ تم تحميل الاعتماديات بنجاح"

      - name: 🔨 توليد الكود
        run: |
          echo "🔨 تشغيل build_runner..."
          flutter pub run build_runner build --delete-conflicting-outputs || echo "⚠️ لم يتم العثور على ملفات للتوليد"

      - name: 🔐 إعداد التوقيع (إن وجد)
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          echo "🔐 إعداد مفتاح التوقيع..."
          
          if [ -n "$KEYSTORE_BASE64" ] && [ -n "$KEYSTORE_PASSWORD" ]; then
            echo "$KEYSTORE_BASE64" | base64 -d > android/app/upload-keystore.jks
            
            cat > android/key.properties << EOF
          storeFile=upload-keystore.jks
          storePassword=$KEYSTORE_PASSWORD
          keyAlias=$KEY_ALIAS
          keyPassword=$KEY_PASSWORD
          EOF
            echo "✅ تم إعداد التوقيع"
          else
            echo "⚠️ بعض أسرار التوقيع مفقودة - سيتم استخدام توقيع Debug"
          fi

      - name: 📱 بناء Release APK (ARM64)
        env:
          BASE_API_URL: ${{ github.event.inputs.base_api_url || secrets.BASE_API_URL || 'http://hotelmarina.com/MARINA_HOTEL_PORTABLE/api/v1' }}
        run: |
          echo "📱 بناء Release APK (ARM64)..."
          echo "🌐 استخدام BASE_API_URL: $BASE_API_URL"
          
          flutter build apk --release \
            --dart-define=BASE_API_URL=$BASE_API_URL \
            --build-name=${{ steps.version.outputs.version_name }} \
            --build-number=${{ steps.version.outputs.build_number }} \
            --target-platform android-arm64 \
            --analyze-size
          
          echo "✅ تم بناء Release APK بنجاح"

      - name: 📱 بناء Release APK (جميع المعماريات - Split)
        env:
          BASE_API_URL: ${{ github.event.inputs.base_api_url || secrets.BASE_API_URL || 'http://hotelmarina.com/MARINA_HOTEL_PORTABLE/api/v1' }}
        run: |
          echo "📱 بناء Release APK لجميع المعماريات..."
          
          flutter build apk --release \
            --dart-define=BASE_API_URL=$BASE_API_URL \
            --build-name=${{ steps.version.outputs.version_name }} \
            --build-number=${{ steps.version.outputs.build_number }} \
            --target-platform android-arm,android-arm64,android-x64 \
            --split-per-abi
          
          echo "✅ تم بناء APK لجميع المعماريات"

      - name: 📦 بناء AAB (للـ Play Store)
        env:
          BASE_API_URL: ${{ github.event.inputs.base_api_url || secrets.BASE_API_URL || 'http://hotelmarina.com/MARINA_HOTEL_PORTABLE/api/v1' }}
        run: |
          echo "📦 بناء Android App Bundle (AAB)..."
          
          flutter build appbundle --release \
            --dart-define=BASE_API_URL=$BASE_API_URL \
            --build-name=${{ steps.version.outputs.version_name }} \
            --build-number=${{ steps.version.outputs.build_number }} \
            --analyze-size
          
          echo "✅ تم بناء AAB بنجاح"

      - name: 📂 تجميع الملفات
        run: |
          echo "📂 إنشاء مجلد الإصدارات..."
          mkdir -p ../releases/apk
          
          # نسخ universal APK
          if [ -f "build/app/outputs/flutter-apk/app-release.apk" ]; then
            cp "build/app/outputs/flutter-apk/app-release.apk" \
               "../releases/apk/marina-hotel-v${{ steps.version.outputs.version_name }}-universal.apk"
            echo "✅ نسخ Universal APK"
          fi
          
          # نسخ Split APKs
          for f in build/app/outputs/flutter-apk/*-release.apk; do
            if [ -f "$f" ]; then
              base=$(basename "$f")
              abi=""
              case "$base" in
                *arm64-v8a*) abi="arm64" ;;
                *armeabi-v7a*) abi="armv7" ;;
                *x86_64*) abi="x86_64" ;;
              esac
              if [ -n "$abi" ]; then
                cp "$f" "../releases/apk/marina-hotel-v${{ steps.version.outputs.version_name }}-${abi}.apk"
                echo "✅ نسخ $abi APK"
              fi
            fi
          done
          
          # نسخ AAB
          if [ -f "build/app/outputs/bundle/release/app-release.aab" ]; then
            cp "build/app/outputs/bundle/release/app-release.aab" \
               "../releases/apk/marina-hotel-v${{ steps.version.outputs.version_name }}.aab"
            echo "✅ نسخ AAB"
          fi
          
          echo "📋 الملفات المنسوخة:"
          ls -lh ../releases/apk/

      - name: 🔍 فحص صحة APK
        run: |
          echo "🔍 فحص صحة ملفات APK..."
          cd ../releases/apk
          
          for f in *.apk; do
            if [ -f "$f" ]; then
              echo "🔍 فحص: $f"
              
              # فحص أن الملف zip صحيح
              if ! unzip -t "$f" >/dev/null 2>&1; then
                echo "❌ خطأ: الملف تالف - $f"
                exit 1
              fi
              
              # فحص وجود AndroidManifest.xml
              if ! unzip -l "$f" | grep -q AndroidManifest.xml; then
                echo "❌ خطأ: AndroidManifest.xml مفقود في $f"
                exit 1
              fi
              
              echo "✅ الملف سليم: $f"
            fi
          done
          
          echo "✅ جميع ملفات APK سليمة"

      - name: 📊 توليد Checksums والبيانات الوصفية
        id: checksums
        run: |
          cd ../releases/apk
          
          echo "📊 توليد Checksums..."
          echo "date_utc,version,build_number,file,size_bytes,sha256" > metadata.csv
          NOW=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          
          for f in *.apk *.aab; do
            if [ -f "$f" ]; then
              size=$(stat -c%s "$f" 2>/dev/null || stat -f%z "$f")
              sha=$(sha256sum "$f" 2>/dev/null | awk '{print $1}' || shasum -a 256 "$f" | awk '{print $1}')
              
              echo "$NOW,${{ steps.version.outputs.version_name }},${{ steps.version.outputs.build_number }},$f,$size,$sha" >> metadata.csv
              
              # حساب حجم قابل للقراءة
              size_human=$(du -h "$f" | cut -f1)
              echo "📦 $f - $size_human - SHA256: ${sha:0:8}..."
            fi
          done
          
          echo "✅ تم توليد Checksums"

      - name: ⬆️ رفع الملفات كـ Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: marina-hotel-release-v${{ steps.version.outputs.version_name }}-build${{ steps.version.outputs.build_number }}
          path: |
            releases/apk/*.apk
            releases/apk/*.aab
            releases/apk/metadata.csv
          retention-days: 90

      - name: 🎉 إنشاء GitHub Release (للـ Tags)
        if: startsWith(github.ref, 'refs/tags/v') || github.event.inputs.create_release == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name || format('v{0}-build{1}', steps.version.outputs.version_name, steps.version.outputs.build_number) }}
          name: Marina Hotel v${{ steps.version.outputs.version_name }}
          body: |
            # 🏨 Marina Hotel Mobile v${{ steps.version.outputs.version_name }}
            
            ## 📋 معلومات البناء
            - **رقم الإصدار:** v${{ steps.version.outputs.version_name }}
            - **رقم البناء:** ${{ steps.version.outputs.build_number }}
            - **التاريخ:** ${{ steps.version.outputs.date }}
            - **Commit:** ${{ github.sha }}
            
            ## ✨ الميزات
            - نظام إدارة فندقية شامل (8 وحدات)
            - واجهة عربية RTL
            - معمارية Offline-First
            - نظام دفع متقدم (5 طرق دفع)
            - إيصالات وتقارير PDF
            - مزامنة بيانات ذكية
            
            ## 📱 الملفات المتاحة
            - **Universal APK**: للأجهزة التي لا تدعم Split APK
            - **ARM64 APK**: للأجهزة الحديثة (موصى به) 
            - **ARM v7 APK**: للأجهزة القديمة
            - **x86_64 APK**: للمحاكيات والأجهزة x86
            - **AAB**: لرفعه على Google Play Store
            
            ## 📥 التثبيت
            1. قم بتحميل ملف APK المناسب لجهازك
            2. فعّل "السماح بالتثبيت من مصادر غير معروفة" في إعدادات الأندرويد
            3. قم بتثبيت ملف APK
            
            ## 🔧 التقنيات المستخدمة
            - Flutter ${{ env.FLUTTER_VERSION }}
            - Dart SDK
            - Drift (SQLite)
            - Riverpod State Management
            
            ---
            
            تم البناء باستخدام GitHub Actions 🤖
          draft: false
          prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') }}
          files: |
            releases/apk/*.apk
            releases/apk/*.aab
            releases/apk/metadata.csv

      - name: 📝 ملخص البناء
        if: always()
        run: |
          echo "## 🚀 ملخص بناء Release" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📋 تفاصيل البناء" >> $GITHUB_STEP_SUMMARY
          echo "- **نوع البناء:** Release APK + AAB" >> $GITHUB_STEP_SUMMARY
          echo "- **الإصدار:** v${{ steps.version.outputs.version_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **رقم البناء:** ${{ steps.version.outputs.build_number }}" >> $GITHUB_STEP_SUMMARY
          echo "- **التاريخ:** ${{ steps.version.outputs.date }}" >> $GITHUB_STEP_SUMMARY
          echo "- **الفرع:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 الملفات المنتجة" >> $GITHUB_STEP_SUMMARY
          
          cd releases/apk
          for f in *.apk *.aab; do
            if [ -f "$f" ]; then
              size=$(du -h "$f" | cut -f1)
              echo "- ✅ $f ($size)" >> $GITHUB_STEP_SUMMARY
            fi
          done
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📥 التحميل" >> $GITHUB_STEP_SUMMARY
          echo "جميع الملفات متاحة في Artifacts أعلاه" >> $GITHUB_STEP_SUMMARY
