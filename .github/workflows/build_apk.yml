name: Marina Hotel APK Builder

on:
  push:
    branches: [ main, 'capy/**' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.24.3'
  JAVA_VERSION: '17'

permissions:
  contents: write
  actions: read

jobs:
  build:
    name: Build APK and AAB
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: ${{ env.JAVA_VERSION }}
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 35
        build-tools: 35.0.0
        
    - name: Cache Flutter Dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.pub-cache
          mobile/.dart_tool
          mobile/build
        key: ${{ runner.os }}-flutter-${{ hashFiles('mobile/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-flutter-
          
    - name: Get Flutter Version
      working-directory: mobile
      run: |
        VERSION_NAME=$(grep '^version:' pubspec.yaml | awk '{print $2}' | cut -d'+' -f1)
        BUILD_NUMBER=${{ github.run_number }}
        echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV
        echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV
        echo "Building version: $VERSION_NAME"
    
    - name: Flutter Doctor
      working-directory: mobile
      run: flutter doctor -v
        
    - name: Install Dependencies
      working-directory: mobile
      run: |
        flutter pub get
        
    - name: Generate Code
      working-directory: mobile
      run: |
        flutter packages pub run build_runner build --delete-conflicting-outputs
        
    - name: Build Release APK (ARM64)
      working-directory: mobile
      run: |
        flutter build apk --release \
          --build-number ${{ env.BUILD_NUMBER }} \
          --target-platform android-arm64 \
          --analyze-size
        
    - name: Build AAB for Play Store
      working-directory: mobile
      run: |
        flutter build appbundle --release \
          --build-number ${{ env.BUILD_NUMBER }} \
          --analyze-size
        
    - name: Build Debug APK
      working-directory: mobile
      run: |
        flutter build apk --debug \
          --target-platform android-arm64 \
          --analyze-size
        
    - name: Create Release Directory
      run: mkdir -p releases/apk
        
    - name: Copy APK Files
      run: |
        # Copy release APK
        cp mobile/build/app/outputs/flutter-apk/app-release.apk releases/apk/marina-hotel-v${{ env.VERSION_NAME }}-release.apk
        
        # Copy debug APK  
        cp mobile/build/app/outputs/flutter-apk/app-debug.apk releases/apk/marina-hotel-v${{ env.VERSION_NAME }}-debug.apk
        
        # Copy AAB
        if [ -f mobile/build/app/outputs/bundle/release/app-release.aab ]; then
          cp mobile/build/app/outputs/bundle/release/app-release.aab releases/apk/marina-hotel-v${{ env.VERSION_NAME }}.aab
        fi
        
    - name: Generate Checksums
      working-directory: releases/apk
      run: |
        echo "date_utc,version,build_number,file,size_bytes,sha256" > metadata.csv
        DATE_UTC=$(date -u +'%Y-%m-%d %H:%M:%S UTC')
        
        for file in *.apk *.aab; do
          if [ -f "$file" ]; then
            size=$(stat -c%s "$file")
            sha256=$(sha256sum "$file" | awk '{print $1}')
            echo "$DATE_UTC,${{ env.VERSION_NAME }},${{ env.BUILD_NUMBER }},$file,$size,$sha256" >> metadata.csv
            echo "Generated: $file ($size bytes)"
          fi
        done
        
    - name: APK Health Check
      working-directory: releases/apk
      run: |
        for file in *.apk; do
          if [ -f "$file" ]; then
            echo "Checking: $file"
            if ! unzip -t "$file" >/dev/null 2>&1; then
              echo "ERROR: $file is corrupted"
              exit 1
            fi
            if ! unzip -l "$file" | grep -q AndroidManifest.xml; then
              echo "ERROR: $file missing AndroidManifest.xml"
              exit 1
            fi
            echo "OK: $file passed health checks"
          fi
        done
        
    - name: Upload APK Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: marina-hotel-apk-v${{ env.VERSION_NAME }}-build${{ env.BUILD_NUMBER }}
        path: |
          releases/apk/*.apk
          releases/apk/*.aab
          releases/apk/metadata.csv
        retention-days: 30
        
    - name: Create Release (on main push)
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ env.VERSION_NAME }}-build${{ env.BUILD_NUMBER }}
        name: Marina Hotel Mobile v${{ env.VERSION_NAME }}
        body: |
          # Marina Hotel Mobile v${{ env.VERSION_NAME }}
          
          **Build Number**: ${{ env.BUILD_NUMBER }}  
          **Date**: $(date -u +'%Y-%m-%d %H:%M UTC')  
          **Commit**: ${{ github.sha }}
          
          ## Features
          - Complete hotel management system (8 modules)
          - Arabic RTL interface
          - Offline-first architecture
          - Advanced payment system (5 methods)
          - PDF receipts and reports
          
          ## Files
          - **Release APK**: For production use
          - **Debug APK**: For development and testing  
          - **AAB**: For Google Play Store
          
          ## Installation
          1. Download the Release APK
          2. Enable "Unknown Sources" in Android settings
          3. Install the APK
          
          Built with Flutter ${{ env.FLUTTER_VERSION }}
        draft: false
        prerelease: false
        files: |
          releases/apk/*.apk
          releases/apk/*.aab
          releases/apk/metadata.csv
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build Summary
      run: |
        echo "Marina Hotel APK Build Complete!"
        echo "Version: ${{ env.VERSION_NAME }}"
        echo "Build: ${{ env.BUILD_NUMBER }}"
        echo "Files:"
        ls -la releases/apk/