name: Android Release APK (Flutter)

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      baseApiUrl:
        description: 'Override BASE_API_URL (optional)'
        required: false
        default: ''

permissions:
  contents: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-release:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.2'
          channel: 'stable'
          cache: true

      - name: Cache Pub
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            mobile/.dart_tool
          key: ${{ runner.os }}-pub-${{ hashFiles('mobile/pubspec.lock') }}

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('mobile/android/gradle/wrapper/gradle-wrapper.properties', 'mobile/android/build.gradle', 'mobile/android/app/build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Tool versions
        run: |
          set -euxo pipefail
          java -version
          flutter --version
          dart --version

      - name: Get dependencies
        working-directory: mobile
        run: |
          set -euxo pipefail
          flutter pub get

      - name: Build codegen
        working-directory: mobile
        run: |
          set -euxo pipefail
          flutter pub run build_runner build --delete-conflicting-outputs

      - name: Decode keystore
        if: ${{ secrets.KEYSTORE_BASE64 != '' }}
        working-directory: mobile/android
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          set -euxo pipefail
          echo "$KEYSTORE_BASE64" | base64 -d > app/upload-keystore.jks
          ls -la app/upload-keystore.jks

      - name: Create key.properties
        if: ${{ secrets.KEYSTORE_PASSWORD != '' && secrets.KEY_ALIAS != '' && secrets.KEY_PASSWORD != '' }}
        working-directory: mobile/android
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          set -euxo pipefail
          cat > key.properties << 'EOF'
          storePassword=${KEYSTORE_PASSWORD}
          keyPassword=${KEY_PASSWORD}
          keyAlias=${KEY_ALIAS}
          storeFile=app/upload-keystore.jks
          EOF
          sed -n '1,4p' key.properties

      - name: Configure BASE_API_URL
        working-directory: mobile
        env:
          BASE_API_URL_INPUT: ${{ inputs.baseApiUrl }}
          BASE_API_URL_SECRET: ${{ secrets.BASE_API_URL }}
        run: |
          set -euxo pipefail
          API="${BASE_API_URL_INPUT}"
          if [ -z "$API" ]; then
            API="${BASE_API_URL_SECRET}"
          fi
          echo "BASE_API_URL=${API}" >> $GITHUB_ENV
          if [ -n "$API" ]; then
            echo "Using BASE_API_URL=$API"
          else
            echo "No BASE_API_URL provided; using app default"
          fi

      - name: Build APK (release)
        working-directory: mobile
        run: |
          set -euxo pipefail
          flutter build apk --release --dart-define=BASE_API_URL="${BASE_API_URL}"

      - name: Compute metadata
        id: meta
        working-directory: mobile
        run: |
          set -euxo pipefail
          APP_VERSION=$(grep '^version:' pubspec.yaml | sed 's/version: //')
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV
          SHORT_SHA=${GITHUB_SHA::7}
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
          echo "APK_PATH=mobile/build/app/outputs/flutter-apk/app-release.apk" >> $GITHUB_ENV

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: marina-hotel-android-release-${{ env.APP_VERSION }}-${{ env.SHORT_SHA }}
          path: mobile/build/app/outputs/flutter-apk/app-release.apk
          retention-days: 30

      - name: Publish GitHub Release asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: mobile/build/app/outputs/flutter-apk/app-release.apk

      - name: Build summary
        if: always()
        run: |
          {
            echo "## Android Release APK"
            echo ""
            echo "- Version: ${APP_VERSION:-unknown}"
            echo "- Commit: $GITHUB_SHA"
            echo "- Tag: ${GITHUB_REF_NAME}"
            echo "- Artifact: marina-hotel-android-release-${APP_VERSION}-${SHORT_SHA}.apk"
          } >> $GITHUB_STEP_SUMMARY
