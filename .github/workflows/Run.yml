name: Build Marina Hotel APK

on:
  push:
    branches: [ main, develop, mobile-system-implementation-* ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      version_name:
        description: 'Version name for the APK'
        required: false
        default: '1.0.0'
      build_type:
        description: 'Build type (debug/release)'
        required: false
        default: 'debug'
        type: choice
        options:
        - debug
        - release

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      BUILD_TYPE: ${{ github.event.inputs.build_type || 'debug' }}
      VERSION_NAME: ${{ github.event.inputs.version_name || '1.0.0' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: recursive
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Display build information
      run: |
        echo "Building Marina Hotel APK"
        echo "Build Type: $BUILD_TYPE"
        echo "Version: $VERSION_NAME"
        echo "Branch: ${{ github.ref_name }}"
        echo "Commit: ${{ github.sha }}"
        echo "Workspace: $GITHUB_WORKSPACE"
      
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Verify project structure
      run: |
        echo "Verifying project structure..."
        if [ ! -d "android_app" ]; then
          echo "ERROR: android_app directory not found!"
          echo "Current directory contents:"
          ls -la
          exit 1
        fi
        
        echo "Android app directory contents:"
        ls -la android_app/
        
        if [ ! -f "android_app/build.gradle" ]; then
          echo "ERROR: android_app/build.gradle not found!"
          exit 1
        fi
        
        if [ ! -f "android_app/settings.gradle" ]; then
          echo "ERROR: android_app/settings.gradle not found!"
          exit 1
        fi
        
        if [ ! -d "android_app/app" ]; then
          echo "ERROR: android_app/app directory not found!"
          exit 1
        fi
        
        if [ ! -f "android_app/app/build.gradle" ]; then
          echo "ERROR: android_app/app/build.gradle not found!"
          exit 1
        fi
        
        echo "Project structure verified successfully!"
        
    - name: Create necessary directories
      run: |
        # إنشاء المجلدات الضرورية فقط إذا كانت غير موجودة
        mkdir -p android_app/app/src/main/res/font
        mkdir -p android_app/app/src/main/res/drawable
        mkdir -p android_app/app/src/main/res/values
        mkdir -p android_app/app/src/main/res/xml
        
        # إنشاء ملف colors.xml إذا لم يكن موجوداً
        if [ ! -f "android_app/app/src/main/res/values/colors.xml" ]; then
          cat > android_app/app/src/main/res/values/colors.xml << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <resources>
              <color name="marina_blue">#1A4B84</color>
              <color name="marina_blue_dark">#0F2D4F</color>
              <color name="marina_gold">#D4AF37</color>
              <color name="marina_gold_dark">#B8941F</color>
              <color name="white">#FFFFFF</color>
              <color name="black">#000000</color>
          </resources>
          EOF
        fi
        
        # إنشاء ملف strings.xml إذا لم يكن موجوداً
        if [ ! -f "android_app/app/src/main/res/values/strings.xml" ]; then
          cat > android_app/app/src/main/res/values/strings.xml << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <resources>
              <string name="app_name">Marina Hotel</string>
              <string name="loading">جاري التحميل...</string>
              <string name="error_network">خطأ في الاتصال بالشبكة</string>
              <string name="retry">إعادة المحاولة</string>
          </resources>
          EOF
        fi

    - name: Make gradlew executable
      run: |
        if [ -f "android_app/gradlew" ]; then
          chmod +x android_app/gradlew
        else
          echo "gradlew not found, creating it..."
          cd android_app
          ./gradlew wrapper --gradle-version=8.5 --no-daemon
          chmod +x gradlew
          cd ..
        fi
      
    - name: Clean project
      run: |
        cd android_app
        ./gradlew clean --no-daemon --console=plain
        
    - name: Build APK
      run: |
        cd android_app
        
        # بناء APK مع إخراج مفصل
        if [ "$BUILD_TYPE" = "release" ]; then
          echo "Building release APK..."
          ./gradlew assembleRelease --no-daemon --console=verbose --info --stacktrace
          APK_PATH="app/build/outputs/apk/release/app-release.apk"
        else
          echo "Building debug APK..."
          ./gradlew assembleDebug --no-daemon --console=verbose --info --stacktrace
          APK_PATH="app/build/outputs/apk/debug/app-debug.apk"
        fi
        
        # التحقق من وجود APK
        echo "APK_PATH=$APK_PATH" >> $GITHUB_ENV
        if [ -f "$APK_PATH" ]; then
          echo "APK built successfully: $APK_PATH"
          ls -la "$(dirname "$APK_PATH")"
          file "$APK_PATH"
          du -h "$APK_PATH"
        else
          echo "APK build failed - file not found: $APK_PATH"
          echo "Directory contents:"
          ls -la app/build/outputs/apk/
          exit 1
        fi
        
    - name: Upload APK artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: marina-hotel-${{ env.BUILD_TYPE }}-apk
        path: android_app/${{ env.APK_PATH }}
        retention-days: 7
        if-no-files-found: error
        
    - name: Generate build summary
      run: |
        echo "## Marina Hotel APK Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Build Details" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Type:** $BUILD_TYPE" >> $GITHUB_STEP_SUMMARY
        echo "- **Version:** $VERSION_NAME" >> $GITHUB_STEP_SUMMARY
        echo "- **Version Code:** ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        cd android_app
        if [ -f "$APK_PATH" ]; then
          APK_SIZE=$(du -h "$APK_PATH" | cut -f1)
          echo "### APK Information" >> $GITHUB_STEP_SUMMARY
          echo "- **APK Size:** $APK_SIZE" >> $GITHUB_STEP_SUMMARY
          echo "- **APK Path:** $APK_PATH" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ✅ Build Status" >> $GITHUB_STEP_SUMMARY
          echo "Build completed successfully!" >> $GITHUB_STEP_SUMMARY
        else
          echo "### ❌ Build Status" >> $GITHUB_STEP_SUMMARY
          echo "Build failed! APK file not found." >> $GITHUB_STEP_SUMMARY
        fi
