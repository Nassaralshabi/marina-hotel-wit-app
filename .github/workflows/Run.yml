name: Build Marina Hotel APK

on:
  push:
    branches: [ main, develop, mobile-system-implementation-* ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      version_name:
        description: 'Version name for the APK'
        required: false
        default: '1.0.0'
      build_type:
        description: 'Build type (debug/release)'
        required: false
        default: 'debug'
        type: choice
        options:
        - debug
        - release

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      BUILD_TYPE: ${{ github.event.inputs.build_type || 'debug' }}
      VERSION_NAME: ${{ github.event.inputs.version_name || '1.0.0' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Display build information
      run: |
        echo "Building Marina Hotel APK"
        echo "Build Type: $BUILD_TYPE"
        echo "Version: $VERSION_NAME"
        echo "Branch: ${{ github.ref_name }}"
        echo "Commit: ${{ github.sha }}"
      
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Setup Android project structure
      run: |
        echo "Creating Android project structure..."
        mkdir -p android_app/app/src/main/java/com/marinahotel/app
        mkdir -p android_app/app/src/main/res/layout
        mkdir -p android_app/app/src/main/res/values
        mkdir -p android_app/app/src/main/res/drawable
        mkdir -p android_app/app/src/main/res/mipmap-anydpi-v26
        mkdir -p android_app/app/src/main/res/xml
        mkdir -p android_app/app/src/main/res/font
        
        # Create AndroidManifest.xml
        cat > android_app/app/src/main/AndroidManifest.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <manifest xmlns:android="http://schemas.android.com/apk/res/android"
            xmlns:tools="http://schemas.android.com/tools">
            
            <uses-permission android:name="android.permission.INTERNET" />
            <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
            
            <application
                android:name=".MainApplication"
                android:allowBackup="true"
                android:dataExtractionRules="@xml/data_extraction_rules"
                android:fullBackupContent="@xml/backup_rules"
                android:icon="@mipmap/ic_launcher"
                android:label="@string/app_name"
                android:theme="@style/Theme.MarinaHotel"
                tools:targetApi="31">
                
                <activity
                    android:name=".MainActivity"
                    android:exported="true"
                    android:label="@string/app_name"
                    android:theme="@style/Theme.MarinaHotel.NoActionBar">
                    <intent-filter>
                        <action android:name="android.intent.action.MAIN" />
                        <category android:name="android.intent.category.LAUNCHER" />
                    </intent-filter>
                </activity>
                
                <activity
                    android:name=".SplashActivity"
                    android:exported="true"
                    android:theme="@style/Theme.MarinaHotel.Splash">
                    <intent-filter>
                        <action android:name="android.intent.action.MAIN" />
                        <category android:name="android.intent.category.LAUNCHER" />
                    </intent-filter>
                </activity>
            </application>
        </manifest>
        EOF
        
        # Create MainActivity.java
        cat > android_app/app/src/main/java/com/marinahotel/app/MainActivity.java << 'EOF'
        package com.marinahotel.app;
        
        import android.os.Bundle;
        import androidx.appcompat.app.AppCompatActivity;
        
        public class MainActivity extends AppCompatActivity {
            @Override
            protected void onCreate(Bundle savedInstanceState) {
                super.onCreate(savedInstanceState);
                setContentView(R.layout.activity_main);
            }
        }
        EOF
        
        # Create SplashActivity.java
        cat > android_app/app/src/main/java/com/marinahotel/app/SplashActivity.java << 'EOF'
        package com.marinahotel.app;
        
        import android.content.Intent;
        import android.os.Bundle;
        import android.os.Handler;
        import androidx.appcompat.app.AppCompatActivity;
        
        public class SplashActivity extends AppCompatActivity {
            private static final long SPLASH_DELAY = 2000; // 2 seconds
            
            @Override
            protected void onCreate(Bundle savedInstanceState) {
                super.onCreate(savedInstanceState);
                setContentView(R.layout.activity_splash);
                
                new Handler().postDelayed(() -> {
                    Intent intent = new Intent(SplashActivity.this, MainActivity.class);
                    startActivity(intent);
                    finish();
                }, SPLASH_DELAY);
            }
        }
        EOF
        
        # Create Application class
        cat > android_app/app/src/main/java/com/marinahotel/app/MainApplication.java << 'EOF'
        package com.marinahotel.app;
        
        import android.app.Application;
        
        public class MainApplication extends Application {
            @Override
            public void onCreate() {
                super.onCreate();
            }
        }
        EOF
        
        # Create main layout
        cat > android_app/app/src/main/res/layout/activity_main.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical"
            android:gravity="center"
            android:background="@color/marina_blue">
            
            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="Marina Hotel App"
                android:textSize="24sp"
                android:textColor="@color/white"
                android:textStyle="bold" />
                
            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="Loading..."
                android:layout_marginTop="16dp"
                android:textSize="16sp"
                android:textColor="@color/white" />
        </LinearLayout>
        EOF
        
        # Create splash layout (simplified without custom fonts)
        cat > android_app/app/src/main/res/layout/activity_splash.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical"
            android:gravity="center"
            android:background="@drawable/splash_background">
            
            <ImageView
                android:layout_width="120dp"
                android:layout_height="120dp"
                android:src="@mipmap/ic_launcher"
                android:contentDescription="@string/app_logo" />
                
            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="@string/app_name"
                android:textSize="28sp"
                android:textColor="@color/white"
                android:textStyle="bold"
                android:layout_marginTop="24dp" />
                
            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="@string/app_slogan"
                android:textSize="16sp"
                android:textColor="@color/white"
                android:layout_marginTop="8dp" />
                
            <ProgressBar
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:indeterminateTint="@color/white"
                android:layout_marginTop="32dp" />
        </LinearLayout>
        EOF
        
        # Create splash background
        cat > android_app/app/src/main/res/drawable/splash_background.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <shape xmlns:android="http://schemas.android.com/apk/res/android"
            android:shape="rectangle">
            <gradient
                android:startColor="@color/marina_blue"
                android:endColor="@color/marina_blue_dark"
                android:angle="45" />
        </shape>
        EOF
        
        # Create strings.xml
        cat > android_app/app/src/main/res/values/strings.xml << 'EOF'
        <resources>
            <string name="app_name">Marina Hotel</string>
            <string name="app_slogan">Luxury Hospitality Experience</string>
            <string name="app_logo">Marina Hotel Logo</string>
        </resources>
        EOF
        
        # Create colors.xml
        cat > android_app/app/src/main/res/values/colors.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <resources>
            <color name="marina_blue">#FF1976D2</color>
            <color name="marina_blue_dark">#FF0D47A1</color>
            <color name="marina_gold">#FFFFD700</color>
            <color name="marina_gold_dark">#FFFFC400</color>
            <color name="white">#FFFFFFFF</color>
            <color name="black">#FF000000</color>
            
            <!-- Add the missing color resources -->
            <color name="primary_color">@color/marina_blue</color>
            <color name="primary_dark">@color/marina_blue_dark</color>
        </resources>
        EOF
        
        # Create themes.xml
        cat > android_app/app/src/main/res/values/themes.xml << 'EOF'
        <resources xmlns:tools="http://schemas.android.com/tools">
            <style name="Theme.MarinaHotel" parent="Theme.MaterialComponents.DayNight.DarkActionBar">
                <item name="colorPrimary">@color/primary_color</item>
                <item name="colorPrimaryVariant">@color/primary_dark</item>
                <item name="colorOnPrimary">@color/white</item>
                <item name="colorSecondary">@color/marina_gold</item>
                <item name="colorSecondaryVariant">@color/marina_gold_dark</item>
                <item name="colorOnSecondary">@color/black</item>
                <item name="android:statusBarColor" tools:targetApi="l">?attr/colorPrimaryVariant</item>
            </style>
            <style name="Theme.MarinaHotel.NoActionBar">
                <item name="windowActionBar">false</item>
                <item name="windowNoTitle">true</item>
            </style>
            <style name="Theme.MarinaHotel.Splash" parent="Theme.MarinaHotel.NoActionBar">
                <item name="android:windowBackground">@drawable/splash_background</item>
                <item name="android:windowFullscreen">true</item>
            </style>
        </resources>
        EOF
        
        # Create XML resources
        cat > android_app/app/src/main/res/xml/backup_rules.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <full-backup-content>
        </full-backup-content>
        EOF
        
        cat > android_app/app/src/main/res/xml/data_extraction_rules.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <data-extraction-rules>
            <cloud-backup>
                <include domain="sharedpref" path="."/>
            </cloud-backup>
            <device-transfer>
                <include domain="sharedpref" path="."/>
            </device-transfer>
        </data-extraction-rules>
        EOF
        
        # Create a simple launcher icon (adaptive)
        cat > android_app/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
            <background android:drawable="@color/marina_blue"/>
            <foreground android:drawable="@drawable/ic_launcher_foreground"/>
        </adaptive-icon>
        EOF
        
        # Create a placeholder foreground
        cat > android_app/app/src/main/res/drawable/ic_launcher_foreground.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <vector xmlns:android="http://schemas.android.com/apk/res/android"
            android:width="108dp"
            android:height="108dp"
            android:viewportWidth="108"
            android:viewportHeight="108">
            <path
                android:fillColor="@color/marina_gold"
                android:pathData="M54,0L54,0a54,54 0,1 0,0 108a54,54 0,1 0,0 -108z"/>
            <path
                android:fillColor="@color/white"
                android:pathData="M54,25A29,29 0,1 1,25 54,29 29,0 0,1 54,25z"/>
        </vector>
        EOF
        
        # Create placeholder font files (empty files to avoid errors)
        touch android_app/app/src/main/res/font/cairo_bold.ttf
        touch android_app/app/src/main/res/font/cairo_regular.ttf
        
        # Create font XML files
        cat > android_app/app/src/main/res/font/cairo_bold.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <font-family xmlns:android="http://schemas.android.com/apk/res/android">
            <font android:fontStyle="normal" android:fontWeight="700" android:font="@font/cairo_bold" />
        </font-family>
        EOF
        
        cat > android_app/app/src/main/res/font/cairo_regular.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <font-family xmlns:android="http://schemas.android.com/apk/res/android">
            <font android:fontStyle="normal" android:fontWeight="400" android:font="@font/cairo_regular" />
        </font-family>
        EOF
        
        # gradle.properties
        cat > android_app/gradle.properties << 'EOF'
        org.gradle.jvmargs=-Xmx4096m -Dfile.encoding=UTF-8
        android.useAndroidX=true
        android.enableJetifier=true
        EOF
        
        # settings.gradle
        cat > android_app/settings.gradle << 'EOF'
        pluginManagement {
            repositories {
                google()
                mavenCentral()
                gradlePluginPortal()
            }
        }
        dependencyResolutionManagement {
            repositoriesMode.set(RepositoriesMode.FAIL_ON PROJECT_REPOS)
            repositories {
                google()
                mavenCentral()
            }
        }
        include ':app'
        rootProject.name = 'Marina Hotel'
        EOF
        
        # Root build.gradle
        cat > android_app/build.gradle << 'EOF'
        buildscript {
            repositories {
                google()
                mavenCentral()
            }
            dependencies {
                classpath 'com.android.tools.build:gradle:8.2.0'
            }
        }
        
        task clean(type: Delete) {
            delete rootProject.buildDir
        }
        EOF

        # App build.gradle
        cat > android_app/app/build.gradle << EOF
        plugins {
            id 'com.android.application'
        }
        
        android {
            namespace 'com.marinahotel.app'
            compileSdk 34
        
            defaultConfig {
                applicationId "com.marinahotel.app"
                minSdk 21
                targetSdk 34
                versionCode ${{ github.run_number }}
                versionName "$VERSION_NAME"
        
                testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
            }
        
            buildTypes {
                debug {
                    applicationIdSuffix ".debug"
                    debuggable true
                    minifyEnabled false
                    shrinkResources false
                }
                
                release {
                    minifyEnabled true
                    shrinkResources true
                    proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                }
            }
            
            compileOptions {
                sourceCompatibility JavaVersion.VERSION_17
                targetCompatibility JavaVersion.VERSION_17
            }
        }
        
        dependencies {
            implementation 'androidx.appcompat:appcompat:1.6.1'
            implementation 'com.google.android.material:material:1.11.0'
            implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
            
            testImplementation 'junit:junit:4.13.2'
            androidTestImplementation 'androidx.test.ext:junit:1.1.5'
            androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
        }
        EOF

    - name: Create Gradle Wrapper
      run: |
        cd android_app
        gradle wrapper --gradle-version 8.5 --distribution-type all
        
    - name: Make gradlew executable
      run: chmod +x android_app/gradlew
      
    - name: Clean project
      run: |
        cd android_app
        ./gradlew clean --stacktrace
      
    - name: Build APK
      run: |
        cd android_app
        if [ "$BUILD_TYPE" = "release" ]; then
          ./gradlew assembleRelease --stacktrace --info
          APK_PATH="app/build/outputs/apk/release/app-release.apk"
        else
          ./gradlew assembleDebug --stacktrace --info
          APK_PATH="app/build/outputs/apk/debug/app-debug.apk"
        fi
        echo "APK_PATH=$APK_PATH" >> $GITHUB_ENV
        if [ -f "$APK_PATH" ]; then
          echo "APK built successfully: $APK_PATH"
          ls -la "$APK_PATH"
          file "$APK_PATH"
          du -h "$APK_PATH"
        else
          echo "APK build failed - file not found: $APK_PATH"
          # Show build errors
          find . -name "*.log" -exec echo "=== {} ===" \; -exec cat {} \;
          exit 1
        fi
        
    - name: Upload APK artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: marina-hotel-${{ env.BUILD_TYPE }}-apk-v${{ env.VERSION_NAME }}
        path: android_app/${{ env.APK_PATH }}
        retention-days: 30
        
    - name: Generate build summary
      run: |
        echo "## Marina Hotel APK Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Build Details" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Type:** $BUILD_TYPE" >> $GITHUB_STEP_SUMMARY
        echo "- **Version:** $VERSION_NAME" >> $GITHUB_STEP_SUMMARY
        echo "- **Version Code:** ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### APK Information" >> $GITHUB_STEP_SUMMARY
        cd android_app
        if [ -f "$APK_PATH" ]; then
          APK_SIZE=$(du -h "$APK_PATH" | cut -f1)
          echo "- **APK Size:** $APK_SIZE" >> $GITHUB_STEP_SUMMARY
          echo "- **APK Path:** $APK_PATH" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Build Status" >> $GITHUB_STEP_SUMMARY
          echo "✅ Build completed successfully!" >> $GITHUB_STEP_SUMMARY
        else
          echo "### Build Status" >> $GITHUB_STEP_SUMMARY
          echo "❌ Build failed!" >> $GITHUB_STEP_SUMMARY
        fi
