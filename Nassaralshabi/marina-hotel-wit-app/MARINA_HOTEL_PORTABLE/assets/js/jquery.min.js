// jQuery مبسط للعمل بدون إنترنت
;((window) => {
  function $(selector) {
    if (typeof selector === "string") {
      return new jQueryLite(document.querySelectorAll(selector))
    } else if (selector.nodeType) {
      return new jQueryLite([selector])
    } else if (typeof selector === "function") {
      if (document.readyState === "loading") {
        document.addEventListener("DOMContentLoaded", selector)
      } else {
        selector()
      }
      return
    }
    return new jQueryLite(selector)
  }

  function jQueryLite(elements) {
    this.elements = Array.from(elements)
    this.length = this.elements.length
  }

  jQueryLite.prototype = {
    each: function (callback) {
      this.elements.forEach(callback)
      return this
    },

    on: function (event, handler) {
      this.each((element) => {
        element.addEventListener(event, handler)
      })
      return this
    },

    off: function (event, handler) {
      this.each((element) => {
        element.removeEventListener(event, handler)
      })
      return this
    },

    val: function (value) {
      if (value === undefined) {
        return this.elements[0] ? this.elements[0].value : ""
      }
      this.each((element) => {
        element.value = value
      })
      return this
    },

    html: function (content) {
      if (content === undefined) {
        return this.elements[0] ? this.elements[0].innerHTML : ""
      }
      this.each((element) => {
        element.innerHTML = content
      })
      return this
    },

    text: function (content) {
      if (content === undefined) {
        return this.elements[0] ? this.elements[0].textContent : ""
      }
      this.each((element) => {
        element.textContent = content
      })
      return this
    },

    addClass: function (className) {
      this.each((element) => {
        element.classList.add(className)
      })
      return this
    },

    removeClass: function (className) {
      this.each((element) => {
        element.classList.remove(className)
      })
      return this
    },

    toggleClass: function (className) {
      this.each((element) => {
        element.classList.toggle(className)
      })
      return this
    },

    show: function () {
      this.each((element) => {
        element.style.display = ""
      })
      return this
    },

    hide: function () {
      this.each((element) => {
        element.style.display = "none"
      })
      return this
    },

    change: function (handler) {
      return this.on("change", handler)
    },

    click: function (handler) {
      return this.on("click", handler)
    },

    ready: function (handler) {
      if (document.readyState === "loading") {
        document.addEventListener("DOMContentLoaded", handler)
      } else {
        handler()
      }
      return this
    },
  }

  $.ready = (handler) => {
    if (document.readyState === "loading") {
      document.addEventListener("DOMContentLoaded", handler)
    } else {
      handler()
    }
  }

  window.$ = window.jQuery = $
})(window)
