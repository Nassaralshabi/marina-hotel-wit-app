name: 🔍 Code Quality & Security Check

on:
  push:
    branches: [ main, develop, capy/* ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run security scan daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  lint:
    name: 🧹 Lint & Code Style
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: ☕ Setup Java 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 🤖 Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: 🗂️ Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        
    - name: 🔧 Grant execute permission
      run: chmod +x gradlew
      
    - name: 🧹 Run Lint
      run: |
        echo "🔍 Running Android Lint..."
        ./gradlew lint
        
    - name: 📤 Upload Lint Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: lint-results
        path: |
          app/build/reports/lint-results*.html
          app/build/reports/lint-results*.xml
        retention-days: 7

  security:
    name: 🛡️ Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🔒 Run Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'Marina Hotel'
        path: '.'
        format: 'ALL'
        
    - name: 📤 Upload Security Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: security-report
        path: reports/
        retention-days: 30
        
    - name: 🔍 Scan for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

  proguard-test:
    name: 🔧 ProGuard Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: ☕ Setup Java 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 🤖 Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: 🗂️ Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        
    - name: 🔧 Grant execute permission
      run: chmod +x gradlew
      
    - name: 🔑 Setup Test Keystore
      run: |
        # Create a test keystore for ProGuard validation
        KEYSTORE_BASE64="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"
        echo "$KEYSTORE_BASE64" | base64 -d > app/release.keystore
        chmod 600 app/release.keystore
        
    - name: 🔧 Test ProGuard Rules
      run: |
        echo "🧪 Testing ProGuard configuration..."
        
        # Build with ProGuard enabled (staging build)
        ./gradlew assembleStaging
        
    - name: 📊 Analyze ProGuard Output
      run: |
        echo "📊 ProGuard Analysis Results:"
        echo "============================="
        
        # Check if ProGuard mapping file exists
        if [ -f "app/build/outputs/mapping/staging/mapping.txt" ]; then
          echo "✅ ProGuard mapping file generated"
          echo "📏 Mapping file size: $(du -h app/build/outputs/mapping/staging/mapping.txt)"
          echo "📋 Sample mappings (first 20 lines):"
          head -20 app/build/outputs/mapping/staging/mapping.txt
        else
          echo "❌ ProGuard mapping file not found"
        fi
        
        # Check APK size reduction
        if [ -f "app/build/outputs/apk/staging/app-staging.apk" ]; then
          size=$(du -h app/build/outputs/apk/staging/app-staging.apk | cut -f1)
          echo "📱 Staging APK size: $size"
        fi
        
    - name: 📤 Upload ProGuard Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: proguard-results
        path: |
          app/build/outputs/mapping/
          app/build/reports/
        retention-days: 30